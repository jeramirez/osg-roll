<?xml version="1.0" standalone="no"?>

<kickstart>


	<description>
	The OSG Roll.
	</description>

	<copyright>
         No yet Eduardo's test	
	</copyright>

<changelog>
	$Log: osg-ce-sge.xml,v $
	Revision 0.0  2012/10/05 05:48:53  eduardo
	Initial Revision
	
</changelog>

<package>rocks-osg-command</package>
<package>libxml2.&arch;</package>
<package>yum-priorities</package>
<package>yum-cron</package>
<package>lcmaps</package>
<package>lcas-lcmaps-gt4-interface</package>
<package>vo-client</package>
<package>perl-libwww-perl</package>
<package>perl-URI</package>
<package>hostproxy</package>


<post>
<!-- 
     this xml should be called after yum.xml
     yum.xml requires libxml2.&arch; for VMs
-->
### Create Tomcat User
#tomcat:x:91:91:Tomcat:/usr/share/tomcat5:/bin/sh
/usr/sbin/groupadd -g &OSG_tomcatgid; tomcat
/usr/sbin/useradd -u &OSG_tomcatuid; -g &OSG_tomcatgid; -c "Tomcat" -s /bin/sh -d -m /usr/share/tomcat&rocks_version_major; tomcat
### Create the Gratia User
#gratia:x:464:464:gratia runtime user:/etc/gratia:/sbin/nologin
/usr/sbin/groupadd -g &OSG_gratiagid; gratia
/usr/sbin/useradd -u &OSG_gratiauid; -g &OSG_gratiagid; -c "gratia runtime user" -s /sbin/nologin -d /etc/gratia gratia

 <!-- install osg-ce from local mirror-->
yum install osg-ca-certs  &gt;&gt; /root/yum-install.log 2&gt;&amp;1
yum install osg-ce-sge  &gt;&gt; /root/yum-install.log 2&gt;&amp;1
yum install globus-gram-job-manager-managedfork  &gt;&gt; /root/yum-install.log 2&gt;&amp;1

 <!-- customize firewall rules for gatekeeper-server  -->
<eval mode="xml">
/opt/rocks/bin/rocks add firewall host=&hostname; rulename=A20-GLOBUS-TCP-PORT-RANGE network=public service="&OSG_GlobusPortRange;" protocol="tcp" action="ACCEPT" chain="INPUT" flags="-m state --state NEW"
/opt/rocks/bin/rocks add firewall host=&hostname; rulename=A20-GLOBUS-UDP-PORT-RANGE network=public service="&OSG_GlobusPortRange;" protocol="udp" action="ACCEPT" chain="INPUT" flags="-m state --state NEW"
/opt/rocks/bin/rocks add firewall host=&hostname; rulename=A20-GRAM-TCP-PORT network=public service=2119 protocol="tcp" action="ACCEPT" chain="INPUT" flags="-m state --state NEW"
#/opt/rocks/bin/rocks add firewall host=&hostname; rulename=A20-GRAM-WS-TCP-PORT network=public service=9443 protocol="tcp" action="ACCEPT" chain="INPUT" flags="-m state --state NEW"
/opt/rocks/bin/rocks report host firewall &hostname;
</eval>

 <!-- customize lcmaps.db configuration -->
sed -i -e "s#yourgums.yourdomain#&OSG_GumsServer;#" /etc/lcmaps.db

 <!-- activate /etc/grid-security/gsi-authz.conf for use of gums in configuration of osg-ce -->
sed -i -e "s@# globus_mapping@globus_mapping@" /etc/grid-security/gsi-authz.conf

 <!-- activate /etc/gums/gums-client.properties for use of gums in configuration of osg-ce -->
sed -i -e "s@localhost@&OSG_GumsServer;@" /etc/gums/gums-client.properties

 <!-- pre-configure OSG already known paramenters -->
cp -p /etc/osg/config.d/10-misc.ini /etc/osg/config.d/10-misc.ini.template
sed -i -e "s@glexec_location = UNAVAILABLE@glexec_location = /usr/sbin/glexec@" /etc/osg/config.d/10-misc.ini
sed -i -e "s@gums_host = DEFAULT@gums_host = &OSG_GumsServer;@" /etc/osg/config.d/10-misc.ini

cp -p /etc/osg/config.d/10-storage.ini /etc/osg/config.d/10-storage.ini.template
sed -i -e "s@se_available = FALSE@se_available = TRUE@" /etc/osg/config.d/10-storage.ini
sed -i -e "s@default_se = UNAVAILABLE@default_se = &OSG_SEServer;@" /etc/osg/config.d/10-storage.ini
sed -i -e "s@app_dir = UNAVAILABLE@app_dir = &OSG_CE_Mount_ShareDir;/app@" /etc/osg/config.d/10-storage.ini
sed -i -e "s@data_dir = UNAVAILABLE@data_dir = &OSG_CE_DataDir;@" /etc/osg/config.d/10-storage.ini
sed -i -e "s@worker_node_temp = UNAVAILABLE@worker_node_temp = &OSG_WN_TmpDir;@" /etc/osg/config.d/10-storage.ini
sed -i -e "s@site_read = UNAVAILABLE@site_read = srm://&OSG_SEServer;:8443/srm/v2/server@" /etc/osg/config.d/10-storage.ini
sed -i -e "s@write_read = UNAVAILABLE@write_read = srm://&OSG_SEServer;:8443/srm/v2/server@" /etc/osg/config.d/10-storage.ini

cp -p /etc/osg/config.d/15-managedfork.ini /etc/osg/config.d/15-managedfork.ini.template
sed -i -e "s@enabled = FALSE@enabled = TRUE@" /etc/osg/config.d/15-managedfork.ini

cp -p /etc/osg/config.d/20-sge.ini /etc/osg/config.d/20-sge.ini.template
sed -i -e "s@enabled = FALSE@enabled = TRUE@" /etc/osg/config.d/20-sge.ini
#sed -i -e "s@sge_root = UNAVAILABLE@sge_root = NEED-SET-THIS@" /etc/osg/config.d/20-sge.ini
#sed -i -e "s@sge_cell = UNAVAILABLE@sge_cell = NEED-SET-THIS@" /etc/osg/config.d/20-sge.ini
sed -i -e "s@job_contact = host.name/jobmanager-sge@job_contact = &OSG_CEServer;/jobmanager-sge@" /etc/osg/config.d/20-sge.ini
sed -i -e "s@util_contact = host.name/jobmanager@util_contact = &OSG_CEServer;/jobmanager@" /etc/osg/config.d/20-sge.ini

cp -p /etc/osg/config.d/30-gip.ini /etc/osg/config.d/30-gip.ini.template
sed -i -e "s@batch = DEFAULT@batch = sge@" /etc/osg/config.d/30-gip.ini
sed -i -e "s@gsiftp_host = DEFAULT@gsiftp_host = &OSG_GFTPServer;@" /etc/osg/config.d/30-gip.ini

cp -p /etc/osg/config.d/40-network.ini /etc/osg/config.d/40-network.ini.template
sed -i -e "s@source_range = UNAVAILABLE@source_range = &OSG_GlobusTcpSourceRange;@" /etc/osg/config.d/40-network.ini
sed -i -e "s@port_range = UNAVAILABLE@port_range = &OSG_GlobusTcpPortRange;@" /etc/osg/config.d/40-network.ini
sed -i -e "s@port_state_file = UNAVAILABLE@port_state_file = /var/tmp/globus-port-state.log@" /etc/osg/config.d/40-network.ini

cp -p /etc/osg/config.d/01-squid.ini /etc/osg/config.d/01-squid.ini.template
cp -p /etc/osg/config.d/40-siteinfo.ini /etc/osg/config.d/40-siteinfo.ini.template

 <!-- configure hostproxy to serve certificates on worker nodes -->
<file name="/opt/hostproxy/host_dist.nodes" mode="append" >
<eval>
/opt/rocks/bin/rocks report host attr attr=OSG_Client | grep true | sed s/:\ true/.local/g
</eval>
</file>

<file name="/etc/exports" mode="append">
&OSG_CE_Export_LocalDir;/ce &Kickstart_PrivateKickstartHost;(rw,async,no_root_squash) &Kickstart_PrivateNetwork;/&Kickstart_PrivateNetmask;(rw,async)
&OSG_CE_Export_LocalDir;/app &Kickstart_PrivateKickstartHost;(rw,async,no_root_squash) &Kickstart_PrivateNetwork;/&Kickstart_PrivateNetmask;(rw,async)
</file>
# create if needed /scratch/ce/globus/share
[ -d &OSG_CE_Export_LocalDir;/ce/globus/share ]||mkdir -p &OSG_CE_Export_LocalDir;/ce/globus/share
rm -rf &OSG_CE_Export_LocalDir;/ce/globus/share/certificates
mv /etc/grid-security/certificates &OSG_CE_Export_LocalDir;/ce/globus/share/.
ln -s &OSG_CE_Export_LocalDir;/ce/globus/share/certificates /etc/grid-security/certificates
# create if needed /scratch/app/etc
[ -d &OSG_CE_Export_LocalDir;/app/etc ]||mkdir -p &OSG_CE_Export_LocalDir;/app/etc
chmod 1777 &OSG_CE_Export_LocalDir;/app
chmod 1777 &OSG_CE_Export_LocalDir;/app/etc
touch /var/tmp/globus-port-state.log
#fetch-crl 2
#sed -i -e "s@CRLDIR=/etc/grid-security/certificates@CRLDIR=&OSG_CE_Export_LocalDir;/ce/globus/share/certificates@" /etc/fetch-crl.conf
#fetch-crl 3
sed -i -e "s@infodir = /etc/grid-security/certificates@infodir = &OSG_CE_Export_LocalDir;/ce/globus/share/certificates@" /etc/fetch-crl3.conf



<file name="/root/install_ce_cert.sh" perms="0750" >
#!/bin/sh

THISHOST=`hostname`
THISEXEC=$0
DIRNAME=`dirname $THISEXEC`
CESERVER="&OSG_CEServer;"
CERTSDIR="&OSG_StoredCertsDir;/&hostname;"

#temporary solution (or permanent?) while figuring out
#how to import certs at installation step in a secure way
if [ ! -f $DIRNAME/hostcert.pem ]; then
  cp -p $CERTSDIR/hostcert.pem $DIRNAME/.
fi
if [ ! -f $DIRNAME/hostkey.pem ]; then
  cp -p $CERTSDIR/hostkey.pem  $DIRNAME/.
fi

if [ "$THISHOST" == "$CESERVER" ]; then
  echo "installing grid certs on $THISHOST"
  echo "searching certs in $DIRNAME"
  cp -p $DIRNAME/hostcert.pem /etc/grid-security/.
  cp -p $DIRNAME/hostkey.pem /etc/grid-security/.
  chown root:root /etc/grid-security/hostcert.pem
  chown root:root /etc/grid-security/hostkey.pem
  chmod 444 /etc/grid-security/hostcert.pem
  chmod 400 /etc/grid-security/hostkey.pem
  [ -d /etc/grid-security/http ]||mkdir /etc/grid-security/http
  cp -p /etc/grid-security/hostcert.pem /etc/grid-security/http/httpcert.pem
  cp -p /etc/grid-security/hostkey.pem /etc/grid-security/http/httpkey.pem
  chown -R tomcat:root /etc/grid-security/http
  chmod 440 /etc/sudoers
else
  echo "$THISHOST Wrong server to install "
fi

</file>


</post>

</kickstart> 

