<?xml version="1.0" standalone="no"?>

<kickstart>


    <description>
    Condor client (submit/execute) machine configuration.
    </description>

    <copyright>
    Copyright (c) 2000 - 2012 The Regents of the University of California.
    All rights reserved. Rocks(r) v5.5/v6.0 www.rocksclusters.org
    
    </copyright>

    <changelog>
    $Log osg-condor-client$
    Revision 0.1  2012/10/22 05:48:53  eduardo
    initial revision 
    
    </changelog>

<post>

<!-- Generate the node's local condor config file --> 
<eval mode="xml">
/opt/rocks/bin/rocks report host osg condor config &hostname;
</eval>

<!-- With large memory footprints, java doesn't start. See
http://www.cs.wisc.edu/condor/manual/v6.8/3_14Java_Support.html#sec:java-install
for workaround used here -->

<file name="/etc/condor/config.d/02_rocks_condor_config.local" mode="append">
# First set JAVA_MAXHEAP_ARGUMENT to null, to disable the default of max RAM
JAVA_MAXHEAP_ARGUMENT =
</file>

# Now calculate the JAVA_EXTRA_ARGUMENTS
export localmem=`/usr/bin/free -m | awk '/^Mem:/{print $2}'`
if [ $localmem -gt 1906 ] ; then
	localmem=1906
fi
echo "JAVA_EXTRA_ARGUMENTS = -Xmx${localmem}m" &gt;&gt; /etc/condor/config.d/02_rocks_condor_config.local
</post>

<post cond="OSG_Condor_PasswordAuth">
<file name="/tmp/poolpassword">
<eval>if [ -f /var/lib/condor/pool_password ]; then /usr/bin/sudo /bin/cat /var/lib/condor/pool_password | /usr/bin/uuencode --base64 /var/lib/condor/pool_password; fi</eval>
</file>

/usr/bin/uudecode  /tmp/poolpassword
/bin/chmod  600 /var/lib/condor/pool_password
/bin/rm /tmp/poolpassword
</post>

<post cond="(rocks_version_major == 6 and OSG_Condor_StartDaemon)">
/sbin/chkconfig condor on
</post>
<post cond="(rocks_version_major == 7 and OSG_Condor_StartDaemon)">
systemctl enable condor
</post>

</kickstart> 

